
- name: generate uuid
  delegate_to: localhost
  shell: uuid
  register: vmuuid

- name: prepare qemu config
  delegate_to: localhost
  become: yes
  become_method: sudo
  template:
    dest: "{{ qemuhome }}/{{ vmname }}.xml"
    src: "{{ vmtemplate }}"

- name: prepare qcow2 image
  delegate_to: localhost
  become: yes
  become_method: sudo
  shell: "[ -r \"{{ qcowhome }}/{{ vmname }}.qcow2\" ] || cp \"{{ qcowhome }}/{{ qcowsrc }}\" \"{{ qcowhome }}/{{ vmname }}.qcow2\""

- name: define vm
  delegate_to: localhost
  shell: "virsh define {{ qemuhome }}/{{ vmname }}.xml"
  when: True

- name: start vm
  delegate_to: localhost
  shell: "virsh start {{ vmname }}"
  when: True

- name: wait for ssh
  wait_for_connection:

- name: get new vm facts
  setup:

- name: set hostname
  shell: "hostnamectl set-hostname {{ vmname }}"

- name: setup ubuntu
  block:

  - name: remove netplans
    shell: rm -f /etc/netplan/*

  - name: setup netplan defaul
    template:
      dest: /etc/netplan/10-default.yaml
      src: "{{ netplanetemplate }}"
    vars:
      newip: "{{ vmip }}"

  - name: change disk size ubuntu
    lvol:
      size: "{{ lvsize }}"
      shrink: no
      resizefs: yes
      lv: "ubuntu-lv"
      vg: "ubuntu-vg"

  when: ansible_distribution == "Ubuntu"

- name: setup centos
  block:

  - name: setup centos ifcfg
    template:
      dest: /etc/sysconfig/network-scripts/ifcfg-eth0
      src: centos_ifcfg.j2
    vars:
      newip: "{{ vmip }}"

  - name: change disk size centos
    lvol:
      size: "{{ lvsize }}"
      shrink: no
      resizefs: yes
      lv: "root"
      vg: "centos"

  when: ansible_distribution == "CentOS"


- name: update hosts
  delegate_to: localhost
  become: yes
  become_method: sudo
  lineinfile:
    path: /etc/hosts
    line: "{{ vmip }} {{ vmname }}"

- name: reboot
  ignore_errors: yes
  reboot:
    connect_timeout: 1
    reboot_timeout: 1